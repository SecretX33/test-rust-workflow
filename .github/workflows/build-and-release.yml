name: Build and Release

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      username:
        description: 'A username passed from the caller workflow'
        default: 'john-doe'
        required: false
        type: string
      password:
        description: 'A password passed from the caller workflow'
        default: 'password'
        required: true
        type: string

env:
  CARGO_REGISTRY: https://github.com/rust-lang/crates.io-index
  CARGO_TARGET_DIR: target
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Print the input name to STDOUT
        run: |
          echo The username is ${{ inputs.username }}
          echo The password is ${{ inputs.password }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install zip unzip

      - name: Build for Windows
        run: |
          cargo build --release --target x86_64-pc-windows-msvc
          mkdir -p dist/windows
          zip target/x86_64-pc-windows-msvc/release/ZipSource.x64.Windows target/x86_64-pc-windows-msvc/release/zipsource.exe
          cp target/x86_64-pc-windows-msvc/release/ZipSource.x64.Windows.zip dist/windows/

      - name: Build for Linux
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu
          mkdir -p dist/linux
          zip target/x86_64-pc-windows-msvc/release/ZipSource.x64.Linux target/x86_64-pc-windows-msvc/release/zipsource
          cp target/x86_64-unknown-linux-gnu/release/ZipSource.x64.Linux.zip dist/linux/

      - name: Build for MacOS
        run: |
          cargo build --release --target x86_64-apple-darwin
          mkdir -p dist/macos
          zip target/x86_64-pc-windows-msvc/release/ZipSource.x64.MacOS target/x86_64-pc-windows-msvc/release/zipsource
          cp target/x86_64-apple-darwin/release/ZipSource.x64.MacOS.zip dist/macos/

  release:
    runs-on: ubuntu-latest
    needs: build
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          assets: |
            dist/windows/ZipSource.x64.Windows.zip
            dist/linux/ZipSource.x64.Linux.zip
            dist/macos/ZipSource.x64.MacOS.zip
